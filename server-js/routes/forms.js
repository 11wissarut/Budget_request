import { Router } from 'express';
import multer from 'multer';
import { existsSync, mkdirSync, unlinkSync } from 'fs';
import { join, resolve } from 'path';
import { pool } from '../db.js';

// üìå auth middleware (‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏ï‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á)
const router = Router();

// ==================
// üìÇ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Multer ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ü‡∏≠‡∏£‡πå‡∏°
// ==================
const storage = multer.diskStorage({
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå
  destination: (req, file, cb) => {
    const dir = join(process.cwd(), 'uploads', 'forms');
    if (!existsSync(dir)) mkdirSync(dir, { recursive: true }); // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    cb(null, dir);
  },
  // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå (timestamp + ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà sanitize ‡πÅ‡∏•‡πâ‡∏ß)
  filename: (req, file, cb) => {
    const originalname = file.originalname.replace(/[^a-zA-Z0-9._-]/g, '_'); // ‡∏•‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏≠‡∏≠‡∏Å
    cb(null, `${Date.now()}-${originalname}`);
  }
});
const upload = multer({ storage });

// ==================
// üìå ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (GET /)
// ==================
router.get('/', async (req, res) => {
  try {
    const [rows] = await pool.query('SELECT * FROM downloadable_forms ORDER BY created_at DESC');
    res.json(rows); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
  } catch (e) {
    console.error(e);
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°' });
  }
});

// ==================
// üìå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡∏°‡πà (POST /)
// ==================
router.post('/', upload.single('file'), async (req, res) => {
  const { title } = req.body; // ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏≠‡∏£‡πå‡∏°
  const file = req.file; // ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input
  if (!title || !file) {
    return res.status(400).json({ message: '‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ü‡∏≠‡∏£‡πå‡∏°' });
  }

  // ‡πÄ‡∏Å‡πá‡∏ö path ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
  const file_path = file.path.replace(process.cwd(), '').replace(/\\/g, '/'); // ‡∏ó‡∏≥ path ‡πÉ‡∏´‡πâ relative
  const file_name = file.originalname;

  try {
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const [result] = await pool.query(
      'INSERT INTO downloadable_forms (title, file_name, file_path) VALUES (?, ?, ?)',
      [title, file_name, file_path]
    );
    res.status(201).json({ message: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', id: result.insertId });
  } catch (e) {
    console.error(e);
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' });
  }
});

// ==================
// üìå ‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° (DELETE /:id)
// ==================
router.delete('/:id', async (req, res) => {
    const { id } = req.params; // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ id ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏à‡∏≤‡∏Å URL ‡πÄ‡∏ä‡πà‡∏ô /123
    const connection = await pool.getConnection();
    try {
        await connection.beginTransaction();

        // 1. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏û‡∏≤‡∏ò‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö record
        const [rows] = await connection.query('SELECT file_path FROM downloadable_forms WHERE id = ?', [id]);
        if (rows.length === 0) {
            return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö' });
        }
        const filePath = rows[0].file_path;

        // 2. ‡∏•‡∏ö record ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        await connection.query('DELETE FROM downloadable_forms WHERE id = ?', [id]);

        // 3. ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
        if (filePath) {
            const absolutePath = resolve(process.cwd(), filePath.substring(1)); // ‡∏•‡∏ö "/" ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô absolute path
            if (existsSync(absolutePath)) {
                unlinkSync(absolutePath); // ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á
            }
        }

        await connection.commit();
        res.json({ message: '‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' });

    } catch (e) {
        await connection.rollback();
        console.error(e);
        res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°' });
    } finally {
        connection.release(); // ‡∏õ‡∏•‡πà‡∏≠‡∏¢ connection ‡∏Ñ‡∏∑‡∏ô
    }
});

export default router;
