import { Router } from 'express';
import multer from 'multer';
import { existsSync, mkdirSync } from 'fs';
import { join } from 'path';
import { pool } from '../db.js';
import { authRequired, allowModules } from '../middleware.js';

const router = Router();

// =============================
// üìÇ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ multer ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ (quotations)
// =============================
const storage = multer.diskStorage({
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå
  destination: (req, file, cb) => {
    // ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠ (requestId) ‡∏à‡∏∞‡∏°‡∏µ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
    const dir = join(process.cwd(), 'uploads', 'quotations', String(req.params.requestId));
    if (!existsSync(dir)) mkdirSync(dir, { recursive: true }); // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
    cb(null, dir);
  },
  // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå ‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö vendor_no + timestamp
  filename: (req, file, cb) => {
    const vendorNo = (req.body.vendor_no || '1').toString().replace(/[^0-9]/g,''); 
    cb(null, `vendor${vendorNo}-${Date.now()}-${file.originalname}`);
  }
});
const upload = multer({ storage });

// =============================
// üìå POST ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏´‡∏°‡πà
// =============================
router.post('/:requestId/quotations', 
  authRequired,                   // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô
  allowModules('requests'),       // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏°‡∏î‡∏π‡∏• "requests"
  upload.array('files', 10),      // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10 ‡πÑ‡∏ü‡∏•‡πå
  async (req, res) => {
    try {
      const { requestId } = req.params;
      const { vendor_no, vendor_name, amount } = req.body;
      const files = req.files || [];

      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏™‡πà‡∏á‡∏°‡∏≤‡πÄ‡∏•‡∏¢ ‚Üí ‡πÅ‡∏à‡πâ‡∏á error
      if (files.length === 0) return res.status(400).json({ message: 'No files' });

      // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° values ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö insert ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const values = files.map(f => [
        requestId, 
        Number(vendor_no || 1), 
        vendor_name, 
        Number(amount || 0),
        f.path.replace(process.cwd() + require('path').sep,'').replace(/\\/g,'/') // ‡πÄ‡∏Å‡πá‡∏ö path ‡πÅ‡∏ö‡∏ö relative
      ]);

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤ + path ‡πÑ‡∏ü‡∏•‡πå
      await pool.query(
        `INSERT INTO request_quotations (request_id, vendor_no, vendor_name, amount, file_path)
         VALUES ${values.map(()=>'(?,?,?,?,?)').join(',')}`, values.flat()
      );

      res.json({ ok: true });
    } catch (e) { 
      console.error(e); 
      res.status(500).json({ message: 'Upload error' }); 
    }
});

// =============================
// üìå GET ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ô‡∏µ‡πâ
// =============================
router.get('/:requestId/quotations', 
  authRequired, 
  allowModules('requests'), 
  async (req, res) => {
    const [rows] = await pool.query(
      `SELECT quotation_id, vendor_no, vendor_name, amount, file_path, created_at
       FROM request_quotations 
       WHERE request_id=? 
       ORDER BY vendor_no ASC, quotation_id ASC`,
       [req.params.requestId]
    );
    res.json(rows);
});

// =============================
// üìå export router ‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
// =============================
export default router;
